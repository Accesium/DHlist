'use strict';
const q=document.querySelector.bind(document),qa=document.querySelectorAll.bind(document),calendarDays=q('#calendar-days'),currentMonthElement=q('#currentMonth'),prevMonthButton=q('#prevMonth'),nextMonthButton=q('#nextMonth'),todoModal=q('#todoModal'),closeModal=q('#closeModal'),modalDate=q('#modalDate'),todoInput=q('#todoInput'),todoForm=q('#todoForm'),prioritySelect=q('#prioritySelect'),todoList=q('.todo-list'),navItems=qa('.nav-item');
let currentDate=new Date(2025,0,1),selectedDate=null,currentFilter='all';
const todos=JSON.parse(localStorage.getItem('todos'))||{},monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];
function renderCalendar(){
  const e=currentDate.getFullYear(),t=currentDate.getMonth();
  currentMonthElement.textContent=`${monthNames[t]} ${e}`;
  const n=new Date(e,t,1),o=new Date(e,t+1,0),a=o.getDate(),r=n.getDay();
  let d='',l=1;
  const s=Math.ceil((a+r)/7)*7;
  for(let n=0;n<s;n++)
    if(n<r||l>a)d+='<div class="day other-month"></div>';
    else{
      const o=`${e}-${(t+1).toString().padStart(2,'0')}-${l.toString().padStart(2,'0')}`,r=todos[o]&&todos[o].length>0;
      d+=`<div class="day ${r?'has-todos':''}" data-date="${o}" onclick="openTodoModal('${o}')">${l}</div>`,l++
    }
  calendarDays.innerHTML=d
}
function openTodoModal(e){
  selectedDate=e;
  const[t,n,o]=e.split('-');
  modalDate.textContent=`${t}년 ${n}월 ${o}일`,todoModal.classList.add('show'),renderTodos()
}
function addTodo(e){
  e.preventDefault();
  const t=todoInput.value.trim();
  if(''===t||!selectedDate)return;
  const n={id:Date.now(),text:t,completed:!1,priority:prioritySelect.value,createdAt:new Date};
  todos[selectedDate]||(todos[selectedDate]=[]),todos[selectedDate].push(n),saveTodos(),renderTodos(),renderCalendar(),todoInput.value=''
}
function toggleTodo(e){
  selectedDate&&todos[selectedDate]&&(todos[selectedDate]=todos[selectedDate].map(t=>t.id===e?{...t,completed:!t.completed}:t),saveTodos(),renderTodos())
}
function deleteTodo(e){
  selectedDate&&todos[selectedDate]&&(todos[selectedDate]=todos[selectedDate].filter(t=>t.id!==e),saveTodos(),renderTodos(),renderCalendar())
}
function setFilter(e){
  currentFilter=e,navItems.forEach(t=>{t.dataset.filter===e?t.classList.add('active'):t.classList.remove('active')}),renderTodos()
}
function renderTodos(){
  if(!selectedDate||!todos[selectedDate])return void(todoList.innerHTML='');
  const e=todos[selectedDate].filter(e=>'active'===currentFilter?!e.completed:'completed'===currentFilter?e.completed:!0);
  todoList.innerHTML=e.map(e=>`<div class="todo-item ${e.completed?'completed':''} priority-${e.priority}"><input type="checkbox" class="todo-checkbox" ${e.completed?'checked':''} onchange="toggleTodo(${e.id})"><span class="priority-badge">${getPriorityLabel(e.priority)}</span><span class="todo-text">${e.text}</span><button class="delete-btn" onclick="deleteTodo(${e.id})">삭제</button></div>`).join('')
}
function getPriorityLabel(e){
  return{first:'1st',second:'2nd',third:'3rd'}[e]||''
}
function saveTodos(){
  localStorage.setItem('todos',JSON.stringify(todos))
}
function handleModalClick(e){
  e.target===todoModal&&todoModal.classList.remove('show')
}
prevMonthButton.addEventListener('click',()=>{
  currentDate.setMonth(currentDate.getMonth()-1),renderCalendar()
}),nextMonthButton.addEventListener('click',()=>{
  currentDate.setMonth(currentDate.getMonth()+1),renderCalendar()
}),closeModal.addEventListener('click',()=>todoModal.classList.remove('show')),todoModal.addEventListener('click',handleModalClick),todoForm.addEventListener('submit',addTodo),navItems.forEach(e=>{
  e.addEventListener('click',t=>{
    t.preventDefault(),setFilter(e.dataset.filter)
  })
}),window.openTodoModal=openTodoModal,window.toggleTodo=toggleTodo,window.deleteTodo=deleteTodo,renderCalendar(); 